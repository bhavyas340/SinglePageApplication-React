{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyadeepsharma/Downloads/12-adv-starting-project/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData, useParams, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventDetail() {\n  _s();\n  const data = useRouteLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(EventDetail, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetail;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details fro selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["json","useLoaderData","useParams","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetail","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/bhavyadeepsharma/Downloads/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { json, useLoaderData, useParams, useRouteLoaderData } from \"react-router-dom\"\nimport EventItem from '../components/EventItem'\n\n\nexport default function EventDetail() {\nconst data = useRouteLoaderData();\n  return (\n    <EventItem event={data.event}/>\n\n\n  )\n}\n\nexport async function loader({request, params}){\n  const id =  params.eventId;\n const response = await fetch('http://localhost:8080/events/'+id)\n\n if(!response.ok){\n  throw json({message: 'Could not fetch details fro selected event.'},{\n    status: 500\n  })\n } else{\n  return response;\n }\n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,EAAEC,SAAS,EAAEC,kBAAkB,QAAQ,kBAAkB;AACrF,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG/C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,CAAC;EAC/B,oBACEG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAInC;AAACN,EAAA,CAPuBD,WAAW;EAAA,QACtBJ,kBAAkB;AAAA;AAAAY,EAAA,GADPR,WAAW;AASnC,OAAO,eAAeS,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAC;EAC7C,MAAMC,EAAE,GAAID,MAAM,CAACE,OAAO;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAACH,EAAE,CAAC;EAEhE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAC;IACf,MAAMvB,IAAI,CAAC;MAACwB,OAAO,EAAE;IAA6C,CAAC,EAAC;MAClEC,MAAM,EAAE;IACV,CAAC,CAAC;EACH,CAAC,MAAK;IACL,OAAOJ,QAAQ;EAChB;AACD;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}