{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyadeepsharma/Downloads/12-adv-starting-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from '../components/EventsList';\nimport { json, useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n\n  // if(data.isError){\n  //   return <p>{data.message}</p>\n  // }\n\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError: true, message:'Could not fetch events.'};\n    //   throw new Response(JSON.stringify({ message: 'Could not fetch events.'}), \n    //   {status : 500}\n    // )\n    return json({\n      message: 'Could not fetch urce or page '\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","json","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","$RefreshReg$"],"sources":["/Users/bhavyadeepsharma/Downloads/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import EventsList from '../components/EventsList';\nimport { json, useLoaderData } from 'react-router-dom';\n\nfunction EventsPage() {\n  const data=useLoaderData();\n\n  // if(data.isError){\n  //   return <p>{data.message}</p>\n  // }\n\n  const events = data.events;\n\n\n\n  return (\n    <>\n      <EventsList events={events} />;\n    </>\n  );\n}\n\nexport default EventsPage;\n\nexport async function loader(){\n  \n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    // return {isError: true, message:'Could not fetch events.'};\n  //   throw new Response(JSON.stringify({ message: 'Could not fetch events.'}), \n  //   {status : 500}\n  // )\n  return json({message: 'Could not fetch urce or page '})\n  } else {\n    return response;\n  }\n}"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAACP,aAAa,CAAC,CAAC;;EAE1B;EACA;EACA;;EAEA,MAAMQ,MAAM,GAAGD,IAAI,CAACC,MAAM;EAI1B,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA,CAACJ,UAAU;MAACU,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAChC;EAAA,eAAE,CAAC;AAEP;AAACP,EAAA,CAhBQD,UAAU;EAAA,QACNL,aAAa;AAAA;AAAAc,EAAA,GADjBT,UAAU;AAkBnB,eAAeA,UAAU;AAEzB,OAAO,eAAeU,MAAMA,CAAA,EAAE;EAE5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACF;IACA;IACA;IACA,OAAOnB,IAAI,CAAC;MAACoB,OAAO,EAAE;IAA+B,CAAC,CAAC;EACvD,CAAC,MAAM;IACL,OAAOH,QAAQ;EACjB;AACF;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}