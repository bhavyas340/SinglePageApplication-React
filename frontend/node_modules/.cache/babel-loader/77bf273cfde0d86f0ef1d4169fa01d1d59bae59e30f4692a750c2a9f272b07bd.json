{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyadeepsharma/Downloads/12-adv-starting-project/frontend/src/pages/NewEvent.js\";\nimport React from 'react';\nimport EventForm from '../components/EventForm';\nimport { json } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEvent() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 4\n  }, this);\n}\n_c = NewEvent;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  console.log('this working but');\n  const response = await fetch('http:/localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEvent\");","map":{"version":3,"names":["React","EventForm","json","jsxDEV","_jsxDEV","NewEvent","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","console","log","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["/Users/bhavyadeepsharma/Downloads/12-adv-starting-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import React from 'react'\nimport EventForm from '../components/EventForm'\nimport { json } from 'react-router-dom';\n\nexport default function NewEvent() {\n  \n  return (\n   <EventForm/>\n  )\n}\n\nexport async function action({request,params}){\n\n  const data= await request.formData();\n\n  const eventData={\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  }\n  console.log('this working but')\n    const response = await fetch('http:/localhost:8080/events',{\n      method:'POST',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      body:JSON.stringify(eventData),\n})\n\nif(!response.ok){\n  throw json({message:'Could not save event'},{status:500})\n}\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAEjC,oBACCD,OAAA,CAACH,SAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEf;AAACC,EAAA,GALuBL,QAAQ;AAOhC,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EAE5C,MAAMC,IAAI,GAAE,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAEpC,MAAMC,SAAS,GAAC;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EACDI,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAC;IACzDC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACN,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACd,SAAS;EACnC,CAAC,CAAC;EAEF,IAAG,CAACQ,QAAQ,CAACO,EAAE,EAAC;IACd,MAAM7B,IAAI,CAAC;MAAC8B,OAAO,EAAC;IAAsB,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EAC3D;AACA;AAAC,IAAAvB,EAAA;AAAAwB,YAAA,CAAAxB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}