{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyadeepsharma/Downloads/12-adv-starting-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from '../components/EventsList';\nimport { useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.me\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: 'Could not fetch events.'\n    };\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","isError","children","me","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loader","response","fetch","ok","message","$RefreshReg$"],"sources":["/Users/bhavyadeepsharma/Downloads/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import EventsList from '../components/EventsList';\nimport { useLoaderData } from 'react-router-dom';\n\nfunction EventsPage() {\n  const data=useLoaderData();\n\n  if(data.isError){\n    return <p>{data.me}</p>\n  }\n\n  const events = data.events;\n\n\n\n  return (\n    <>\n      <EventsList events={events} />;\n    </>\n  );\n}\n\nexport default EventsPage;\n\nexport async function loader(){\n  \n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    return {isError: true, message:'Could not fetch events.'};\n    \n  } else {\n\n    return response;\n  }\n}"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAACP,aAAa,CAAC,CAAC;EAE1B,IAAGO,IAAI,CAACC,OAAO,EAAC;IACd,oBAAON,OAAA;MAAAO,QAAA,EAAIF,IAAI,CAACG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACzB;EAEA,MAAMC,MAAM,GAAGR,IAAI,CAACQ,MAAM;EAI1B,oBACEb,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA,CAACH,UAAU;MAACgB,MAAM,EAAEA;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAChC;EAAA,eAAE,CAAC;AAEP;AAACR,EAAA,CAhBQD,UAAU;EAAA,QACNL,aAAa;AAAA;AAAAgB,EAAA,GADjBX,UAAU;AAkBnB,eAAeA,UAAU;AAEzB,OAAO,eAAeY,MAAMA,CAAA,EAAE;EAE5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAO;MAACZ,OAAO,EAAE,IAAI;MAAEa,OAAO,EAAC;IAAyB,CAAC;EAE3D,CAAC,MAAM;IAEL,OAAOH,QAAQ;EACjB;AACF;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}