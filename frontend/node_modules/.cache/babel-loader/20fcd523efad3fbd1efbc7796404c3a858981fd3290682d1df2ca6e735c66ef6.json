{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyadeepsharma/Downloads/12-adv-starting-project/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Await, defer, json, redirect, useLoaderData, useParams, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventDetail() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: loadEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: loadEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetail, \"OA7jEBfO3UI1aCR8ByPCigEHUtE=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetail;\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details from selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return {isError: true, message:'Could not fetch events.'};\n    //   throw new Response(JSON.stringify({ message: 'Could not fetch events.'}),\n    //   {status : 500}\n    // )\n    return json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["Await","defer","json","redirect","useLoaderData","useParams","useRouteLoaderData","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetail","_s","event","events","children","resolve","loadEvent","fileName","_jsxFileName","lineNumber","columnNumber","loadEvents","_c","id","response","fetch","ok","message","status","resData","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["/Users/bhavyadeepsharma/Downloads/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Await, defer, json, redirect, useLoaderData, useParams, useRouteLoaderData } from \"react-router-dom\"\nimport EventItem from '../components/EventItem'\nimport EventsList from \"../components/EventsList\";\n\n\nexport default function EventDetail() {\nconst {event, events} = useRouteLoaderData('event-detail');\n  return (\n    <>\n    <Await resolve={event}>\n{(loadEvent)=> <EventItem event={loadEvent}></EventItem>}\n    </Await>\n    <Await resolve={events}>\n    {(loadEvents)=> <EventsList events={loadEvents}></EventsList>}\n    </Await>\n    </>\n\n  )\n}\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\"+ id);\n\n  if(!response.ok){\n    throw json(\n      {message: 'Could not fetch details from selected event.'},\n      {\n        status: 500\n      }\n    )\n  } else{\n    const resData = await response.json()\n    return resData.events;\n  }\n}\n\n\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // return {isError: true, message:'Could not fetch events.'};\n    //   throw new Response(JSON.stringify({ message: 'Could not fetch events.'}),\n    //   {status : 500}\n    // )\n    return json({ message: \"Could not fetch events.\" }, { status: 500 });\n  } else {\n    const resData = await response.json()\n    return resData.events;\n  }\n}\n\nexport async function loader({request, params}){\n  const id =  params.eventId;\n   return defer(\n   {\n    event: loadEvent(id),\n    events: loadEvents()\n   }\n   )\n}\n\n\nexport async function action({params, request}){\n  const eventId =  params.eventId;\n  const response = await fetch('http://localhost:8080/events/'+eventId,{\n    method: request.method\n  })\n\n\n if(!response.ok){\n  throw json({message: 'Could not delete event.'},{\n    status: 500\n  })\n } \n return redirect('/events')\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}